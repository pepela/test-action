name: Pre Release

on:
  workflow_dispatch:
    inputs:
      pr_title:
        description: 'Title for the pull request'
        required: true
      pr_body:
        description: 'Description for the pull request'
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Pull Request
        id: create-pr
        run: |
          gh pr create -B master -H development --title '${{ github.event.inputs.pr_title }}' --body '${{ github.event.inputs.pr_body }}'
          pr_number=$(echo "$pr_output" | awk '/Created pull request/ {print $4}')
          echo "$pr_number"
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug output
        run: echo "pr_number = $pr_number"

  wait-for-approval:
    needs: create-pr
    runs-on: ubuntu-latest

    steps:
      - name: Debug
        run: echo "Executing gh pr view $pr_number --repo pepela/test-action --json reviews"

      - name: Wait for pull request approval
        run: |
          wait_for_approval() {
            sleep_interval=60
            while true; do
              pr_info=$(gh pr view $pr_number --repo pepela/test-action --json reviews)
              approved_reviews=$(echo "$pr_info" | jq '.reviews[] | select(.state == "APPROVED")')
              if [ -n "$approved_reviews" ]; then
                echo "Pull request approved!"
                exit 0
              fi
              sleep $sleep_interval
            done
          }
          wait_for_approval
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  merge-pr:
    needs: create-pr
    if: ${{ needs.create-pr.outputs.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Merge Pull Request
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            await github.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: prNumber
            });
