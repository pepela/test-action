name: Pre Release

on:
  workflow_dispatch:
    inputs:
      pr_title:
        description: 'Title for the pull request'
        required: true
      pr_body:
        description: 'Description for the pull request'
        required: true

jobs:
  create-pr:
    runs-on: ubuntu-latest

    outputs:
      pr_number: ${{ steps.create-pr.outputs.pr_number }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Pull Request
        id: create-pr
        run: |
          pr_output=$(gh pr create -B master -H development --title '${{ github.event.inputs.pr_title }}' --body '${{ github.event.inputs.pr_body }}')
          pr_number=$(echo "$pr_output" | awk -F '/' '{print $NF}')
          echo "pr_number=$pr_number" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  wait-for-approval:
    needs: create-pr
    runs-on: ubuntu-latest
    
    outputs:
      result: ${{ steps.wait_approval.outputs.result }}

    steps:
      - name: Wait for pull request approval
        id: wait_approval
        run: |
          wait_for_approval() {
            sleep_interval=60
            while true; do
              pr_info=$(gh pr view ${{ needs.create-pr.outputs.pr_number }} --repo pepela/test-action --json reviews)
              approved_reviews=$(echo "$pr_info" | jq '.reviews[] | select(.state == "APPROVED")')
              if [ -n "$approved_reviews" ]; then
                echo "Pull request approved!"
                echo "result=success" >> $GITHUB_OUTPUT
                exit 0
              fi
              sleep $sleep_interval
            done
          }
          wait_for_approval
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
  merge-pr:
    needs: wait-for-approval
    if: ${{ needs.wait-for-approval.outputs.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: debug
        run: echo `pr numbero ${{ needs.create-pr.outputs.pr_number }}`

      - name: Merge Pull Request
        run: gh pr merge ${{ needs.create-pr.outputs.pr_number }} --repo pepela/test-action
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
